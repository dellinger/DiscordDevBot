{"version":3,"sources":["BasicActions.js","Bot.js","GambleActions.js","index.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,QAAR,EAAkB,MAAlB;;IAEqB,eAEjB,SAFiB,YAEjB,CAAY,GAAZ,EAAiB;;;0BAFA,cAEA;;SAIjB,OAAO,UAAC,OAAD,EAAa;AAChB,cAAK,GAAL,CAAS,KAAT,CAAe,OAAf,EAAwB,MAAxB,EADgB;KAAb,CAJU;;SAQjB,eAAe,UAAC,OAAD,EAAa;AACxB,YAAI,WAAW,MAAK,GAAL,CAAS,QAAT,CAAkB,GAAlB,CAAsB,UAAC,OAAD,EAAa;AAC9C,mBAAO,QAAQ,IAAR,CADuC;SAAb,CAAjC,CADoB;AAIxB,cAAK,GAAL,CAAS,WAAT,CAAqB,QAArB,EAJwB;KAAb,CARE;;AACb,SAAK,GAAL,GAAW,GAAX,CADa;CAAjB;;kBAFiB;;;;;;;;;;;ACFrB,QAAQ,QAAR,EAAkB,MAAlB;AACA,IAAI,UAAU,QAAQ,YAAR,CAAV;;IAES,kCAIT,SAJS,UAIT,GAAc;;;0BAJL,YAIK;;SAFd,mBAAmB,GAEL;;SAWd,aAAa,YAAM;AACrB,cAAK,eAAL,GADqB;;AAGf,cAAK,GAAL,CAAS,EAAT,CAAY,OAAZ,EAAqB,YAAM;AACvB,oBAAQ,GAAR,CAAY,uBAAZ,EADuB;AAEhC,kBAAK,gBAAL,OAA0B,MAAK,GAAL,CAAS,IAAT,CAAc,QAAd,CAA1B,GAAsD,MAAK,YAAL,CAFtB;AAGvB,oBAAQ,GAAR,yBAAkC,OAAO,IAAP,CAAY,MAAK,gBAAL,CAA9C,EAHuB;SAAN,CAArB,CAHe;;AASf,cAAK,GAAL,CAAS,EAAT,CAAY,cAAZ,EAA4B,YAAM;AAC9B,oBAAQ,KAAR,CAAc,8BAAd,EAD8B;AAE9B,oBAAQ,IAAR,CAAa,CAAb,EAF8B;SAAN,CAA5B,CATe;;AAcf,cAAK,GAAL,CAAS,EAAT,CAAY,SAAZ,EAAuB,mBAAW;AACvC,gBAAI,eAAe,QAAQ,YAAR,CAAqB,KAArB,CAA2B,GAA3B,CAAf,CADmC;AAE9B,gBAAI,kBAAkB,aAAa,CAAb,CAAlB,CAF0B;AAGvC,gBAAI,OAAO,aAAa,MAAb,CAAoB,CAApB,CAAP,CAHmC;AAI9B,oBAAQ,GAAR,wBAAiC,eAAjC,EAJ8B;AAK9B,gBAAG,MAAK,iBAAL,CAAuB,eAAvB,CAAH,EAA4C;AACxC,oBAAI,SAAS,MAAK,gBAAL,CAAsB,eAAtB,CAAT,CADoC;AAExC,yCAAO,mCAAW,MAAlB,EAFwC;aAA5C;SALmB,CAAvB,CAde;KAAN,CAXC;;SAqCd,eAAe,UAAC,OAAD,EAAa;AACxB,cAAK,GAAL,CAAS,WAAT,gFACwB,OAAO,IAAP,CAAY,MAAK,gBAAL,CADpC,EADwB;KAAb,CArCD;;SA0Cd,oBAAoB,UAAC,OAAD,EAAa;AAC7B,eAAO,MAAK,gBAAL,CAAsB,cAAtB,CAAqC,OAArC,CAAP,CAD6B;KAAb,CA1CN;;SA8Cd,kBAAkB,YAAM;AACpB,YAAI,WAAW,QAAQ,GAAR,CAAY,aAAZ,CADK;AAEpB,YAAI,WAAW,QAAQ,GAAR,CAAY,gBAAZ,CAFK;AAGpB,YAAG,CAAC,QAAD,IAAa,CAAC,QAAD,EAAW;AACvB,kBAAM,IAAI,KAAJ,iFAAN,CADuB;SAA3B;AAGA,gBAAQ,IAAR,+BAAyC,QAAzC,EANoB;AAOpB,cAAK,GAAL,CAAS,KAAT,CAAe,QAAf,EAAyB,QAAzB,EAPoB;KAAN,CA9CJ;;AACV,SAAK,GAAL,GAAW,IAAI,QAAQ,MAAR,EAAf,CADU;AAEV,SAAK,YAAL,GAAoB,IAAI,YAAJ,CAAiB,KAAK,GAAL,CAArC,CAFU;AAGhB,SAAK,aAAL,GAAqB,IAAI,aAAJ,CAAkB,KAAK,GAAL,CAAvC,CAHgB;AAIV,SAAK,gBAAL,CAAsB,OAAtB,IAAiC,KAAK,YAAL,CAJvB;AAKV,SAAK,gBAAL,CAAsB,eAAtB,IAAyC,KAAK,YAAL,CAAkB,YAAlB,CAL/B;AAMV,SAAK,gBAAL,CAAsB,OAAtB,IAAiC,KAAK,YAAL,CAAkB,IAAlB,CANvB;AAOhB,SAAK,gBAAL,CAAsB,SAAtB,IAAmC,KAAK,aAAL,CAAmB,YAAnB,CAPnB;AAQV,SAAK,gBAAL,CAAsB,OAAtB,IAAiC,KAAK,aAAL,CAAmB,IAAnB,CARvB;CAAd;;;;;;;;;;;ACPJ,QAAQ,QAAR,EAAkB,MAAlB;;IAEqB;AAEpB,UAFoB,aAEpB,CAAY,GAAZ,EAAiB;;;wBAFG,eAEH;;OASjB,eAAe,UAAC,OAAD,EAAU,IAAV,EAAmB;;AAEjC,WAAQ,GAAR,YAAqB,IAArB,EAFiC;AAGjC,OAAG,IAAH,EAAS;AACR,QAAG,MAAK,eAAL,CAAqB,IAArB,CAAH,EAA8B;AAC7B,WAAK,SAAL,GAAiB,SAAS,IAAT,CAAjB,CAD6B;AAE7B,WAAK,WAAL,GAAmB,IAAnB,CAF6B;AAG7B,aAAQ,GAAR,yBAH6B;AAI7B,WAAK,GAAL,CAAS,WAAT,2DAA6E,MAAK,SAAL,YAA7E,EAJ6B;KAA9B,MAKO;AACN,aAAQ,GAAR,+DADM;KALP;AAQA,YAAQ,GAAR,kBAA2B,MAAK,SAAL,CAA3B,CATQ;IAAT,MAUO;AACN,UAAK,GAAL,CAAS,KAAT,CAAe,OAAf,EAAwB,gEAAxB,EADM;IAVP;AAaA,cAAW,YAAK;AACf,YAAQ,GAAR,CAAY,gBAAZ,EADe;AAEf,UAAK,WAAL,GAAmB,KAAnB,CAFe;AAGf,UAAK,GAAL,CAAS,WAAT,gBAHe;AAIf,UAAK,eAAL,CAAqB,OAArB,EAJe;IAAL,EAKR,QAAQ,MAAK,UAAL,CALX,CAhBiC;GAAnB,CATE;;OAiCjB,kBAAkB,UAAC,OAAD,EAAa;;AAE9B,OAAI,cAAc,CAAd;AAF0B,OAG1B,cAAc,SAAd,CAH0B;AAI9B,OAAI,aAAa,MAAK,SAAL;AAJa,OAK1B,aAAa,SAAb,CAL0B;;AAO9B,UAAO,IAAP,CAAY,MAAK,KAAL,CAAZ,CAAwB,OAAxB,CAAgC,UAAC,QAAD,EAAc;AAC7C,QAAG,MAAK,KAAL,CAAW,QAAX,IAAuB,WAAvB,EAAoC;AACtC,mBAAc,MAAK,KAAL,CAAW,QAAX,CAAd,CADsC;AAEtC,mBAAc,QAAd,CAFsC;KAAvC;AAIA,QAAG,MAAK,KAAL,CAAW,QAAX,IAAuB,UAAvB,EAAmC;AACrC,kBAAa,MAAK,KAAL,CAAW,QAAX,CAAb,CADqC;AAErC,kBAAa,QAAb,CAFqC;KAAtC;IAL+B,CAAhC,CAP8B;AAiB9B,OAAG,eAAe,UAAf,EAA2B;AAC7B,UAAK,GAAL,CAAS,WAAT,CAAqB,QAAQ,OAAR,EAAmB,yBAAmB,cAAc,UAAd,aAA+B,WAA1F,EAD6B;IAA9B;GAjBiB,CAjCD;;OA0DjB,OAAO,UAAC,OAAD,EAAU,IAAV,EAAmB;AACzB,OAAG,MAAK,WAAL,EAAkB;AACpB,YAAQ,GAAR,iCAA0C,MAAK,SAAL,CAA1C,CADoB;AAEpB,QAAI,MAAM,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,MAAK,SAAL,CAA3B,GAA6C,CAA7C,CAFU;AAGpB,UAAK,GAAL,CAAS,KAAT,CAAe,OAAf,gBAAmC,mBAAc,MAAK,SAAL,CAAjD,CAHoB;AAIpB,UAAK,KAAL,CAAW,QAAQ,MAAR,CAAe,QAAf,CAAX,GAAsC,GAAtC,CAJoB;IAArB,MAKO;AACN,UAAK,GAAL,CAAS,KAAT,CAAe,OAAf,EAAwB,gEAAxB,EADM;IALP;GADM,CA1DU;;AAChB,OAAK,GAAL,GAAW,GAAX,CADgB;AAEhB,OAAK,WAAL,GAAmB,KAAnB,CAFgB;AAGhB,OAAK,KAAL,GAAa,EAAb;AAHgB,MAIhB,CAAK,SAAL,GAAiB,CAAjB,CAJgB;AAKhB,OAAK,UAAL,GAAkB,CAAlB;AALgB,EAAjB;;cAFoB;;kCAwEJ,KAAK;AACpB,UAAO,mBAAkB,IAAlB,CAAuB,GAAvB,CAAP;KADoB;;;;QAxED;;;;;;ACArB,IAAI,MAAM,IAAI,UAAJ,EAAN;AACJ,IAAI,UAAJ","file":"all.js","sourcesContent":["require('dotenv').config();\n\nexport default class BasicActions {\n\n    constructor(bot) {\n        this.bot = bot;\n    }\n\n    pong = (message) => {\n        this.bot.reply(message, \"pong\");\n    };\n\n    listChannels = (message) => {\n        let channels = this.bot.channels.map((channel) => {\n            return channel.name;\n        });\n        this.bot.sendMessage(channels);\n    };\n\n}\n","require('dotenv').config();\nvar Discord = require(\"discord.js\");\n\nexport class DiscordBot {\n\n    supportedActions = {};\n\n    constructor() {\n        this.bot = new Discord.Client();\n        this.basicActions = new BasicActions(this.bot);\n\t\tthis.gambleActions = new GambleActions(this.bot);\n        this.supportedActions[\"!help\"] = this.listCommands;\n        this.supportedActions[\"!listChannels\"] = this.basicActions.listChannels;\n        this.supportedActions[\"!ping\"] = this.basicActions.pong;\n\t\tthis.supportedActions[\"!gamble\"] = this.gambleActions.initiateGame;\n        this.supportedActions[\"!roll\"] = this.gambleActions.roll;\n    };\n\n    initialize = () => {\n\t\tthis.authenticateBot();\n\t\t\n        this.bot.on(\"ready\", () => {\n            console.log(\"Discord bot is ready!\");\n\t\t\tthis.supportedActions[`@${this.bot.user.username}`] = this.listCommands;\n            console.log(`Supported Actions: ${Object.keys(this.supportedActions)}`);\n        });\n\n        this.bot.on(\"disconnected\", () => {\n            console.error(\"Discord bot disconnected :( \");\n            process.exit(1);\n        });\n\n        this.bot.on(\"message\", message => {\n\t\t\tlet messageArray = message.cleanContent.split(\" \");\n            let potentialAction = messageArray[0];\n\t\t\tlet temp = messageArray.splice(1);\n            console.log(`Potential Action: ${potentialAction}`);\n            if(this.isSupportedAction(potentialAction)) {\n                let action = this.supportedActions[potentialAction];\n                action(message,...temp);\n            }\n        });\n    };\n\n    listCommands = (message) => {\n        this.bot.sendMessage(`This bot recognizes the following commands\n                              ${Object.keys(this.supportedActions)}`);\n    };\n\n    isSupportedAction = (message) => {\n        return this.supportedActions.hasOwnProperty(message);\n    };\n\n    authenticateBot = () => {\n        let username = process.env.DISCORD_EMAIL;\n        let password = process.env.DISCORD_PASSWORD;\n        if(!username || !password) {\n            throw new Error(`Username and Password for the discord account must be supplied in a .env file`);\n        }\n        console.info(`Authenticating with user ${username}`);\n        this.bot.login(username, password);\n    };\n}\n","require('dotenv').config();\n\nexport default class GambleActions {\n\t\n\tconstructor(bot) {\n\t\tthis.bot = bot;\n\t\tthis.gameStarted = false;\n\t\tthis.rolls = {}; // key: userid / amount rolled\n\t\tthis.betAmount = 0;\n\t\tthis.gameLength = 3; // in minutes\n\t}\n\n\t\n\tinitiateGame = (message, args) => {\n\n\t\tconsole.log(`Args: ${args}`);\n\t\tif(args) {\n\t\t\tif(this.isNormalInteger(args)){\n\t\t\t\tthis.betAmount = parseInt(args);\n\t\t\t\tthis.gameStarted = true;\n\t\t\t\tconsole.log(`Gambling has started`);\n\t\t\t\tthis.bot.sendMessage(`------ Gambling has started ------\\n------ Bet is at ${this.betAmount} ------`);\n\t\t\t} else {\n\t\t\t\tconsole.log(`Need to enter a bet amount as an argument to initiate game`);\n\t\t\t}\n\t\t\tconsole.log(`Bet Amount: ${this.betAmount}`);\n\t\t} else {\n\t\t\tthis.bot.reply(message, \"Gambling has not started. Use command ```!gamble [0-999999]```\");\n\t\t}\n\t\tsetTimeout(()=> {\n\t\t\tconsole.log(\"Game has ended\");\n\t\t\tthis.gameStarted = false;\n\t\t\tthis.bot.sendMessage(`Time is up!`);\n\t\t\tthis.calculateWinner(message);\n\t\t}, 60000 * this.gameLength)\n\t};\n\t\n\tcalculateWinner = (message) => {\n\n\t\tlet highestRoll = 0; //user / roll\n\t\tlet highestUser = undefined;\n\t\tlet lowestRoll = this.betAmount; // start high to get to lowest\n\t\tlet lowestUser = undefined;\n\n\t\tObject.keys(this.rolls).forEach((username) => {\n\t\t\tif(this.rolls[username] > highestRoll) {\n\t\t\t\thighestRoll = this.rolls[username];\n\t\t\t\thighestUser = username;\n\t\t\t}\n\t\t\tif(this.rolls[username] < lowestRoll) {\n\t\t\t\tlowestRoll = this.rolls[username];\n\t\t\t\tlowestUser = username;\n\t\t\t}\n\t\t});\n\t\tif(highestUser && lowestUser) {\n\t\t\tthis.bot.sendMessage(message.channel,`${lowestUser} owes ${highestRoll - lowestRoll} to ${highestUser}`);\n\t\t}\n\n\n\t};\n\t\n\t\n\troll = (message, args) => {\n\t\tif(this.gameStarted) {\n\t\t\tconsole.log(`Roll command executed with ${this.betAmount}`);\n\t\t\tlet val = Math.floor(Math.random() * this.betAmount) + 1;\n\t\t\tthis.bot.reply(message,`Rolled a ${val} out of ${this.betAmount}`);\n\t\t\tthis.rolls[message.author.username] = val;\n\t\t} else {\n\t\t\tthis.bot.reply(message, \"Gambling has not started. Use command ```!gamble [0-999999]```\");\n\t\t}\n\t\t\n\t};\n\n\tisNormalInteger(str) {\n\t\treturn /^\\+?([1-9]\\d*)$/.test(str);\n\t}\n\n}\n","\r\n\r\nvar bot = new DiscordBot();\r\nbot.initialize();\r\n\r\n"],"sourceRoot":"/source/"}