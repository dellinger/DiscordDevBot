{"version":3,"sources":["BasicActions.js","Bot.js","GambleActions.js","index.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["require('dotenv').config();\n\nexport default class BasicActions {\n\n    constructor(bot) {\n        this.bot = bot;\n    }\n\n    pong = (message) => {\n        this.bot.reply(message, \"pong\");\n    };\n\n    listChannels = (message) => {\n        let channels = this.bot.channels.map((channel) => {\n            return channel.name;\n        });\n        this.bot.sendMessage(channels);\n    };\n\n}\n","require('dotenv').config();\nvar Discord = require(\"discord.js\");\n\nexport class DiscordBot {\n\n    supportedActions = {};\n\n    constructor() {\n        this.bot = new Discord.Client();\n        this.basicActions = new BasicActions(this.bot);\n\t\tthis.gambleActions = new GambleActions(this.bot);\n        this.supportedActions[\"!help\"] = this.listCommands;\n        this.supportedActions[\"!listChannels\"] = this.basicActions.listChannels;\n        this.supportedActions[\"!ping\"] = this.basicActions.pong;\n\t\tthis.supportedActions[\"!gamble\"] = this.gambleActions.initiateGame;\n        this.supportedActions[\"!1\"] = this.gambleActions.register;\n        this.supportedActions[\"!register\"] = this.gambleActions.register;\n        this.supportedActions[\"!roll\"] = this.gambleActions.roll;\n    };\n\n    initialize = () => {\n\t\tthis.authenticateBot();\n\t\t\n        this.bot.on(\"ready\", () => {\n            console.log(\"Discord bot is ready!\");\n\t\t\tthis.supportedActions[`@${this.bot.user.username}`] = this.listCommands;\n            console.log(`Supported Actions: ${Object.keys(this.supportedActions)}`);\n        });\n\n        this.bot.on(\"disconnected\", () => {\n            console.error(\"Discord bot disconnected :( \");\n            process.exit(1);\n        });\n\n        this.bot.on(\"message\", message => {\n            console.log(`Message: ${message.cleanContent}`);\n\t\t\tlet messageArray = message.cleanContent.split(\" \");\n            let potentialAction = messageArray[0];\n\t\t\tlet temp = messageArray.splice(1, messageArray.length);\n            console.log(`Temp: ${temp}`);\n            console.log(`Potential Action: ${potentialAction}`);\n            if(this.isSupportedAction(potentialAction)) {\n                console.log(`${potentialAction} supported!`);\n                let action = this.supportedActions[potentialAction];\n                action(message,...temp);\n            }\n        });\n    };\n\n    listCommands = (message) => {\n        this.bot.sendMessage(`This bot recognizes the following commands\n                              ${Object.keys(this.supportedActions)}`);\n    };\n\n    isSupportedAction = (message) => {\n        return this.supportedActions.hasOwnProperty(message);\n    };\n\n    authenticateBot = () => {\n        let username = process.env.DISCORD_EMAIL;\n        let password = process.env.DISCORD_PASSWORD;\n        if(!username || !password) {\n            throw new Error(`Username and Password for the discord account must be supplied in a .env file`);\n        }\n        console.info(`Authenticating with user ${username}`);\n        this.bot.login(username, password);\n    };\n}\n","require('dotenv').config();\n\nexport default class GambleActions {\n\t\n\tconstructor(bot) {\n\t\tthis.bot = bot;\n\t\tthis.gameStarted = false;\n\t\tthis.registrationOpen = false;\n\t\tthis.rolls = {}; // key: userid / amount rolled\n\t\tthis.betAmount = 0;\n\t\tthis.gameLength = 3; // in minutes\n\t\tthis.registrationLength = 1; // in minutes\n\t}\n\n\t\n\tinitiateGame = (message, ...args) => {\n\n\t\tconsole.log(`Args: ${args}`);\n\t\tif(args) {\n\t\t\tthis.parseBet(args[0]);\n\t\t\tthis.parseGameLength(args[1]);\n\t\t\tthis.gameStarted = true;\n\t\t\tthis.bot.sendMessage(message.channel,`------ Gambling has started ------\\n\n\t\t\t\t\t\t\t\t\t\t\t\t------ Bet is at ${this.betAmount} ------\\n\n\t\t\t\t\t\t\t\t\t\t\t\t------ Registration ends in 3 minutes. Type !1 to enter.`);\n\t\t\tthis.registrationOpen = true;\n\t\t\t//this.bot.sendMessage(message.channel,`------ Game will end in ${this.gameLength} minutes ------`);\n\t\t\tconsole.log(`Bet Amount: ${this.betAmount}`);\n\t\t} else {\n\t\t\tthis.bot.reply(message, \"Gambling has not started. Use command !gamble *amount* *gamelengthInMins* ```!gamble [0-999999] [1-120]```\");\n\t\t}\n\t\tsetTimeout(()=> {\n\t\t\tthis.bot.sendMessage(message.channel, `------ Registration has ended ------\n\t\t\t\t\t\t\t\t\t\t\t\t\tThe following players press !1  to roll`);\n\t\t\tthis.bot.sendMessage(message.channel, Object.keys(this.rolls));\n\t\t\tthis.registrationOpen = false;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.gameStarted = false;\n\t\t\t\tthis.bot.sendMessage(message.channel,`Time is up!`);\n\t\t\t\tthis.calculateWinner(message);\n\t\t\t}, 60000 * this.gameLength);\n\t\t}, 60000 * this.registrationLength)\n\t};\n\t\n\tcalculateWinner = (message) => {\n\t\tvar min = Infinity, max = -Infinity;\n\n\t\tfor(var user in this.rolls) {\n\t\t\tif(this.rolls[user] < min) {\n\t\t\t\tmin = user;\n\t\t\t}\n\t\t\tif(this.rolls[user] > max) {\n\t\t\t\tmax = user;\n\t\t\t}\n\t\t}\n\t\tthis.bot.sendMessage(message.channel,`${min} owes ${this.rolls[max] - this.rolls[min]} to ${max}`);\n\t};\n\n\tregister = (message, args) => {\n\t\tif(this.registrationOpen) {\n\t\t\tthis.rolls[message.author.username] = null;\n\t\t\tthis.bot.reply(message.channel, `${message.author.username} is registered.`);\n\t\t} else {\n\t\t\tthis.bot.reply(message.channel, \"Registration is not open. Sorry.\");\n\t\t}\n\t};\n\t\n\t\n\troll = (message, args) => {\n\t\tif(this.gameStarted) {\n\t\t\tif(this.registrationOpen) {\n\t\t\t\tthis.bot.reply(message, \"Please wait until registration finishes until performing a roll\");\n\t\t\t} else {\n\t\t\t\tconsole.log(`Roll command executed with ${this.betAmount}`);\n\t\t\t\tlet val = Math.floor(Math.random() * this.betAmount) + 1;\n\t\t\t\tthis.bot.reply(message,`Rolled a ${val} out of ${this.betAmount}`);\n\t\t\t\tthis.rolls[message.author.username] = val;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.bot.reply(message, \"Gambling has not started. Use command ```!gamble [0-999999]```\");\n\t\t}\n\t\t\n\t};\n\n\tparseGameLength(num) {\n\t\tif(num && num > 0 && num < 120) {\n\t\t\tthis.gameLength = num;\n\t\t} else {\n\t\t\tthis.gameLength = 5;\n\t\t}\n\t\tconsole.log(`Game Length is ${this.gameLength} minutes`);\n\t}\n\n\tparseBet(num) {\n\t\tif(this.isNormalInteger(num)){\n\t\t\tthis.betAmount = parseInt(num);\n\t\t}\n\t}\n\n\tisNormalInteger(str) {\n\t\treturn /^\\+?([1-9]\\d*)$/.test(str);\n\t}\n\n}\n","\r\n\r\nvar bot = new DiscordBot();\r\nbot.initialize();\r\n\r\n"],"sourceRoot":"/source/"}