{"version":3,"sources":["BasicActions.js","Bot.js","index.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["require('dotenv').config();\n\nexport default class BasicActions {\n\n    constructor(bot) {\n        this.bot = bot;\n    }\n\n    pong = (message) => {\n        this.bot.reply(message, \"pong\");\n    };\n\n    listChannels = (message) => {\n        let channels = this.bot.channels.map((channel) => {\n            return channel.name;\n        });\n        this.bot.sendMessage(channels);\n    };\n\n\n\n    roll = (message) => {\n        console.log(message);\n        let val = Math.floor(Math.random() * 10) + 1;\n        this.bot.reply(message,`Rolled a ${val}`);\n    };\n}","require('dotenv').config();\nvar Discord = require(\"discord.js\");\n\nexport default class DiscordBot {\n\n    supportedActions = {};\n\n    constructor() {\n        this.bot = new Discord.Client();\n        this.basicActions = new BasicActions(this.bot);\n        this.supportedActions[\"!help\"] = this.listCommands;\n        this.supportedActions[\"!listChannels\"] = this.basicActions.listChannels;\n        this.supportedActions[\"!ping\"] = this.basicActions.pong;\n        this.supportedActions[\"!roll\"] = this.basicActions.roll;\n    };\n\n    initialize = () => {\n\t\tthis.authenticateBot();\n\t\t\n        this.bot.on(\"ready\", () => {\n            console.log(\"Discord bot is ready!\");\n\t\t\tthis.supportedActions[`@${this.bot.user.username}`] = this.listCommands;\n            console.log(`Supported Actions: ${Object.keys(this.supportedActions)}`);\n        });\n\n        this.bot.on(\"disconnected\", () => {\n            console.error(\"Discord bot disconnected :( \");\n            process.exit(1);\n        });\n\n        this.bot.on(\"message\", message => {\n            let potentialAction = message.cleanContent;\n            console.log(`Potential Action: ${potentialAction}`);\n            if(this.isSupportedAction(potentialAction)) {\n                let action = this.supportedActions[potentialAction];\n                action(message);\n            }\n        });\n    };\n\n    listCommands = (message) => {\n        this.bot.sendMessage(`This bot recognizes the following commands\n                              ${Object.keys(this.supportedActions)}`);\n    };\n\n    isSupportedAction = (message) => {\n        return this.supportedActions.hasOwnProperty(message);\n    };\n\n    authenticateBot = () => {\n        let username = process.env.DISCORD_EMAIL;\n        let password = process.env.DISCORD_PASSWORD;\n        if(!username || !password) {\n            throw new Error(`Username and Password for the discord account must be supplied in a .env file`);\n        }\n        console.info(`Authenticating with user ${username}`);\n        this.bot.login(username, password);\n    };\n}\n","\r\n\r\nvar bot = new DiscordBot();\r\nbot.initialize();\r\n\r\n"],"sourceRoot":"/source/"}